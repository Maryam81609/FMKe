#!/bin/bash

# HTTP port.
if [ -z "$HTTP_PORT" ]; then
  export HTTP_PORT=9090
fi

# HTTP IP address.
if [ -z "$IP" ]; then
  export IP="127.0.0.1"
fi

# Antidote instance port.
if [ -z "$ANTIDOTE_PB_PORT" ]; then
  export ANTIDOTE_PB_PORT=8087
fi

# Antidote instance IP address.
if [ -z "$ANTIDOTE_ADDRESS" ]; then
  export ANTIDOTE_ADDRESS="127.0.0.1"
fi

# Receive the host name from the parameters
if [ -z "$INSTANCE_NAME" ]; then
    export INSTANCE_NAME=fmk
fi

  # Choose the hostname for the epmd long name if the hostname exists
  # and if it resolves through the resolver; using a resolvable name
  # that's only resolvable with resolv.conf won't work for long names.
  if [ ! -z "$HOSTNAME" ]; then
    if /usr/bin/dig ${HOSTNAME} | grep -q 'NXDOMAIN'
      export NODE_NAME=${INSTANCE_NAME}@${HOSTNAME}
    then
      export NODE_NAME=${INSTANCE_NAME}@${IP}
    fi
  fi
  # Else, default to IP.
  if [ -z "$NODE_NAME" ]; then
    export NODE_NAME=${INSTANCE_NAME}@${IP}
  fi
#
#  # Handoff port.
#  export HANDOFF_PORT=${PORT1}
#
#  # Protocol buffer port.
#  export PB_PORT=${PORT2}
#
#  # Pub/sub port.
#  export PUBSUB_PORT=${PORT3}
#
#  # Logeader port.
#  export LOGREADER_PORT=${PORT4}
#fi

# Assume 127.0.0.1 as bind host.
if [ -z "$IP" ]; then
  echo "IP address not set; defaulting to 127.0.0.1."
  export IP=127.0.0.1
fi

if [ -z "$NODE_NAME" ]; then
  export NODE_NAME=${INSTANCE_NAME}@${IP}
fi

if [ -z "$COOKIE" ]; then
  export COOKIE=antidote
fi

export RELX_REPLACE_OS_VARS=true

<<<<<<< HEAD
<<<<<<< HEAD

=======
\echo "PORT0: ${PORT0}"
echo "PORT1: ${PORT1}"
echo "PORT2: ${PORT2}"
echo "PORT3: ${PORT3}"
echo "PORT4: ${PORT4}"
>>>>>>> scritps for multi fmk instances on a single machine working
=======

>>>>>>> scritps for multi fmk instances on a single machine working
echo "NODE_NAME: ${NODE_NAME}"
echo "COOKIE: ${COOKIE}"
echo "IP: ${IP}"
echo "IP: ${IP}"
echo "HTTP_PORT: ${HTTP_PORT}"

RELNAME="`dirname \"$0\"`"/${INSTANCE_NAME}
exec ${RELNAME} "$@"
